package id.com.codescannersamplejava;

import java.util.ArrayList;
import java.util.List;

public class MalwareDetector {

    public static List<String> getModelMalwareTLD() {
        List<String> model;
        model = new ArrayList<>();
        model.add("top");
        model.add("info");
        model.add("kr");
        model.add("it");
        model.add("hu");
        model.add("es");
        model.add("xyz");
        return model;
    }

    public static List<String> getModelMalwareFileType() {
        List<String> model = new ArrayList<>();
        model.add("apk");
        model.add("php");
        return model;
    }

    public static Boolean isHttps(String val) {
        final String TF = val.split("//")[0]; // Transfer Protocol
        return "https:".equals(TF);
    }

    public static Boolean isTLDSafe(List<String> model, String val) {
        final String FDA = val.split("//")[1].split("/")[0]; // Full Domain Address
        try {
            Long.valueOf(FDA.replaceAll("\\D+", ""));
            return false;
        } catch (NumberFormatException e) {
        }
        final String TLD = FDA.split("\\.")[FDA.split("\\.").length - 1]; // Top Level Domain
        return !model.contains(TLD);
    }

    public static Integer getParameterType(String val) {
        // 1 = Normal URL
        // 2 = Backtracked URL
        return val.split("/\\?").length;
    }

    public static Boolean isParamater(String val) {
        return val.split("\\?").length > 1;
    }

    public static Boolean isFileSafe(List<String> model, String val) {
        if (getParameterType(val) == 2) {
            return false;
        }
        final String v = val.split("/")[val.split("/").length - 1]; // Splitted url
        final String o; // File Name
        if (isParamater(val)) {
            o = v.split("\\?")[0];
        } else {
            o = v;
        }
        String fExtension = o.split("\\.")[o.split("\\.").length - 1]; // File Extension
        return !model.contains(fExtension);
    }

    public static Boolean isContainsFile(String val) {
        final String v = val.split("/")[val.split("/").length - 1]; // Splitted url
        if (val.split("/").length <= 3) {
            return false;
        }
        final String o; // File Name
        if (isParamater(val)) {
            o = v.split("\\?")[0];
        } else {
            o = v;
        }
        return !"".equals(o);
    }

    public static Boolean urlHttpChecker(String val) {
        try {
            String x = val.substring(0, 3);
            return !x.equals("http");
        } catch (Exception e) {
        }
        return false;
    }
    //    true jika malware
    public static Boolean compileIsURLSafe(String val) {
        if (urlHttpChecker(val)) {
            val = "https://" + val;
        }
        return !((isHttps(val) || isContainsFile(val)) && isFileSafe(getModelMalwareFileType(), val) && isTLDSafe(getModelMalwareTLD(), val));
    }


}
